on:
  push:
    branches: [ deployment ]
  pull_request:
    branches: [ deployment ]

jobs:
  build:
    name: Build microservices
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Build and push docker images

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

#      - name: Build and push api
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.ACR_ENDPOINT }}/fintrack-api:latest
#          file: ./apps/api/Dockerfile
#          target: prod
#
#      - name: Build and push currency-rates-importer
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.ACR_ENDPOINT }}/fintrack-currency-rates-importer:latest
#          file: ./apps/currency-rates-importer/Dockerfile
#          target: prod
#
#      - name: Build and push operations-import-consumer
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.ACR_ENDPOINT }}/fintrack-operations-import-consumer:latest
#          file: ./apps/operations-import-consumer/Dockerfile
#          target: prod

      # Deploy to Kubernetes

#      - name: 'Az CLI login'
#        uses: azure/login@v1
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}
#            az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_KUBERNETES_SERVICE }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_KUBERNETES_SERVICE }}

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Restart AKS deployments
        run: |
          kubectl rollout restart deployment api-deployment -n ft
          kubectl rollout restart deployment currency-rates-importer-deployment -n ft
          kubectl rollout restart deployment operations-import-consumer-deployment -n ft
