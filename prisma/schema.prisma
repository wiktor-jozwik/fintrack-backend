generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  firstName         String?
  lastName          String?
  phoneNumber       String?
  email             String             @unique
  password          String
  categories        Category[]
  usersToCurrencies UserToCurrencies[]

  @@map("users")
}

model Category {
  id                Int          @id @default(autoincrement())
  name              String
  type              CategoryType
  user              User @relation(fields: [userId], references: [id])
  userId            Int
  operations        Operation[]

  @@unique(fields: [name, userId], name: "userCategory")
  @@map("categories")
}

model Operation {
  id                Int        @id @default(autoincrement())
  name              String
  moneyAmount       Decimal
  date              DateTime @db.Date
  category          Category @relation(fields: [categoryId], references: [id])
  categoryId        Int
  currency          Currency @relation(fields: [currencyId], references: [id])
  currencyId        Int

  @@map("operations")
}

model Currency {
  id                Int                @id @default(autoincrement())
  name              String
  symbol            String
  operations        Operation[]
  usersToCurrencies UserToCurrencies[]

  @@map("currencies")
}

model UserToCurrencies {
  createdAt     DateTime    @default(now())
  currency      Currency    @relation(fields: [currencyId], references: [id])
  currencyId        Int
  user          User        @relation(fields: [userId], references: [id])
  userId        Int

  @@id([currencyId, userId])
  @@map("user_to_currencies")
}

enum CategoryType {
    INCOME
    OUTCOME
}